let plus = \x.\y. prim "primAddInt" x y in
let minus = \x.\y. prim "primSubInt" x y in
let eq = \x.\y. prim "primEqInt" x y in
let l = cons 1 (cons 2 (cons 10 (cons 8 nil))) in
let sum = \l. if isNil l
                then 0
                else plus (head l) (sum (tail l))
                fi in
let take = \n.\l. if eq n 0
                    then nil
                    else if isNil l
                            then nil
                            else cons (head l) (take (minus n 1) (tail l))
                         fi
                  fi in
(take 3 l)
ni ni ni ni ni ni