module Main 116 -> eval(m.15);
data "Bool" = "False" -> 0, "True" -> 1;
alloc 0();
\2,100 -> alloc 1(d.0.0,d.0.1);
\1,100 -> let 1 -> eval(d.0.0); in
          case d.0.1.tag of
           -> m.0;
           -> d.0.1.0;;
\1,100 -> let 1 -> eval(d.0.0); in
          case d.0.1.tag of
           -> m.0;
           -> d.0.1.1;;
\1,100 -> let 1 -> eval(d.0.0); in
          case d.0.1.tag of
           -> m.7;
           -> m.6;;
\1,100 -> let 1 -> eval(d.0.0); in
          case d.0.1.tag of
           -> m.6;
           -> m.7;;
alloc 1();
alloc 0();
\2,100 -> ffi "primAddInt"(d.0.0,d.0.1);
\2,100 -> ffi "primSubInt"(d.0.0,d.0.1);
\2,100 -> ffi "primEqInt"(d.0.0,d.0.1);
\0,100 -> let 0 -> app (m.1)(8,m.0); in
          let 1 -> app (m.1)(10,d.0.0); in
          let 2 -> app (m.1)(2,d.0.1); in
          let 3 -> app (m.1)(1,d.0.2); in
          d.0.3;
\1,100 -> let 1 -> \0,100 -> let 0 -> eval(d.1.0); in
                             let 1 -> eval(m.5); in
                             app (d.0.1)(d.0.0); in
          let 2 -> eval(d.0.1); in
          case d.0.2.tag of
           -> let 3 -> \0,100 -> let 0 -> eval(d.1.0); in
                                 let 1 -> eval(m.2); in
                                 app (d.0.1)(d.0.0); in
              let 4 -> \0,100 -> let 0 -> eval(d.1.0); in
                                 let 1 -> eval(m.3); in
                                 app (d.0.1)(d.0.0); in
              let 5 -> \0,100 -> let 0 -> eval(d.1.3); in
                                 let 1 -> eval(m.8); in
                                 app (d.0.1)(d.0.0); in
              let 6 -> \0,100 -> let 0 -> eval(d.1.4); in
                                 let 1 -> eval(m.12); in
                                 app (d.0.1)(d.0.0); in
              let 7 -> eval(d.0.6); in
              let 8 -> eval(d.0.5); in
              app (d.0.8)(d.0.7);
           -> 0;;
\2,100 -> let 2 -> \0,100 -> let 0 -> eval(d.1.0); in
                             let 1 -> eval(m.10); in
                             app (d.0.1)(d.0.0); in
          let 3 -> \0,100 -> let 0 -> eval(0); in
                             let 1 -> eval(d.1.2); in
                             app (d.0.1)(d.0.0); in
          let 4 -> eval(d.0.3); in
          case d.0.4.tag of
           -> let 5 -> \0,100 -> let 0 -> eval(d.1.1); in
                                 let 1 -> eval(m.5); in
                                 app (d.0.1)(d.0.0); in
              let 6 -> eval(d.0.5); in
              case d.0.6.tag of
               -> let 7 -> app (m.2)(d.0.1); in
                  let 8 -> app (m.9)(d.0.0); in
                  let 9 -> app (d.0.8)(1); in
                  let 10 -> app (m.13)(d.0.9); in
                  let 11 -> app (m.3)(d.0.1); in
                  let 12 -> app (d.0.10)(d.0.11); in
                  app (m.1)(d.0.7,d.0.12);
               -> eval(m.0);;
           -> eval(m.0);;
\0,100 -> let 0 -> eval(2); in
          let 1 -> eval(m.13); in
          app (d.0.1)(d.0.0);
\0,100 -> let 0 -> eval(m.11); in
          let 1 -> eval(m.14); in
          app (d.0.1)(d.0.0);