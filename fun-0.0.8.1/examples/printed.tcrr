module Main 114 -> eval(m.13);
data "Bool" = "False" -> 0, "True" -> 1;
alloc 0();
\2,100 -> alloc 1(d.0.0,d.0.1);
\1,100 -> let 1 -> eval(d.0.0); in
          case d.0.1.tag of
           -> m.2;
           -> d.0.1.0;;
\1,100 -> let 1 -> eval(d.0.0); in
          case d.0.1.tag of
           -> m.2;
           -> d.0.1.1;;
\1,100 -> let 1 -> eval(d.0.0); in
          case d.0.1.tag of
           -> m.7;
           -> m.6;;
\1,100 -> let 1 -> eval(d.0.0); in
          case d.0.1.tag of
           -> m.6;
           -> m.7;;
alloc 1();
alloc 0();
\2,100 -> ffi "primEqInt"(d.0.0,d.0.1);
\3,100 -> let 3 -> \0,100 -> let 0 -> eval(d.1.1); in
                             let 1 -> eval(d.1.0); in
                             app (d.0.1)(d.0.0); in
          let 4 -> eval(d.0.2); in
          let 5 -> eval(d.0.3); in
          app (d.0.5)(d.0.4);
\1,100 -> d.0.0;
\0,100 -> let 0 -> app (m.1)(2,m.0); in
          let 1 -> app (m.1)(3,d.0.0); in
          d.0.1;
\0,100 -> let 0 -> \0,100 -> let 0 -> eval(m.11); in
                             let 1 -> eval(m.4); in
                             app (d.0.1)(d.0.0); in
          let 1 -> eval(d.0.0); in
          case d.0.1.tag of
           -> 3;
           -> let 2 -> \0,100 -> let 0 -> eval(2); in
                                 let 1 -> eval(m.8); in
                                 app (d.0.1)(d.0.0); in
              let 3 -> \0,100 -> let 0 -> eval(m.11); in
                                 let 1 -> eval(m.2); in
                                 app (d.0.1)(d.0.0); in
              let 4 -> \0,100 -> let 0 -> eval(d.1.3); in
                                 let 1 -> eval(d.1.2); in
                                 app (d.0.1)(d.0.0); in
              let 5 -> eval(d.0.4); in
              case d.0.5.tag of
               -> let 6 -> eval(m.11); in
                  let 7 -> eval(m.3); in
                  app (d.0.7)(d.0.6);
               -> let 6 -> \0,100 -> let 0 -> eval(m.11); in
                                     let 1 -> eval(m.2); in
                                     app (d.0.1)(d.0.0); in
                  let 7 -> \0,100 -> let 0 -> eval(d.1.6); in
                                     let 1 -> eval(m.10); in
                                     app (d.0.1)(d.0.0); in
                  let 8 -> eval(d.0.7); in
                  let 9 -> eval(m.10); in
                  app (d.0.9)(d.0.8);;;
\0,100 -> eval(m.12);
